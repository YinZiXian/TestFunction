·运行时数据区：
	线程私有：
		1.程序计数器:正在执行的虚拟机字节码指令的地址,如果执行的是native方法则为Undefined
			没有规定任何 OutOfMemoryError情况;
		2.虚拟机栈:每个方法执行时会创建一个栈帧,用于存局部变量表,操作数栈,动态链接,方法出口等信息.
				每个方法从调用到结束,对应着一个栈帧的入栈出栈过程
			StackOverflowError/OutOfMemoryError(线程请求的栈深度>虚拟机允许的栈深度/虚拟机可动态扩展&扩展时无法申请到足够的内存);
	
		3.本地方法栈:
			StackOverflowError/OutOfMemoryError(线程请求的栈深度>虚拟机允许的栈深度/虚拟机可动态扩展&扩展时无法申请到足够的内存);
	线程共享:
		4.方法区（non-heap/永久代）:存储已被虚拟机加载的类信息,常量,静态变量,JIT(即时编译器)编译后的代码.内部有一个运行时常量池
			OutOfMemoryError;
		5.堆:存放对象实例和数据,内部划分TLAB(线程私有的分配缓冲区)
			OutOfMemoryError;
·对象创建:
	1.检查类是否已被加载,解析初始化过,如果没有,执行相应的类加载
	2.为对象分配内存:并发情况下采用CAS+循环
		指针碰撞(标记-整理算法):堆中内存是绝对规整的，用过的内存都放在一边，空闲的内存放在另一边，中间放着一个指针作为分界点
		空闲列表(复制算法):维护一个列表，记录上哪些内存块是可用的，在分配的时候从列表中找到一块足够大的空间划分给对象实例，并更新列表上的记录
	3.默认初始化和显示初始化
	
·对象的内存布局:
	对象头:
	